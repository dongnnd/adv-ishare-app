#!/bin/bash

# Script ƒë·ªÉ build Flutter app trong m√¥i tr∆∞·ªùng x86_64 (Rosetta)
# S·ª≠ d·ª•ng: ./build_flutter_x86_64.sh

set -e

# ƒê·∫£m b·∫£o ch·∫°y t·ª´ th∆∞ m·ª•c g·ªëc c·ªßa d·ª± √°n
if [[ ! -f "Cargo.toml" ]]; then
    echo "L·ªói: Ch·∫°y script n√†y t·ª´ th∆∞ m·ª•c g·ªëc c·ªßa d·ª± √°n rustdesk"
    exit 1
fi

# Set m√¥i tr∆∞·ªùng cho x86_64
export LIBCLANG_PATH="/usr/local/opt/llvm/lib"
export DYLD_LIBRARY_PATH="/usr/local/opt/llvm/lib"

echo "üîß Thi·∫øt l·∫≠p m√¥i tr∆∞·ªùng cho x86_64 (Rosetta)..."
echo "LIBCLANG_PATH: $LIBCLANG_PATH"
echo "Architecture: $(arch -x86_64 uname -m)"

# B∆∞·ªõc 1: Generate bridge code trong x86_64
echo ""
echo "üì¶ B∆∞·ªõc 1: Generating bridge code trong x86_64..."
arch -x86_64 flutter_rust_bridge_codegen \
    --rust-input ./src/flutter_ffi.rs \
    --dart-output ./flutter/lib/generated_bridge.dart \
    --c-output ./flutter/macos/Runner/bridge_generated.h

# B∆∞·ªõc 2: Build Flutter trong x86_64
echo ""
echo "üèóÔ∏è  B∆∞·ªõc 2: Building Flutter app trong x86_64..."
arch -x86_64 python3 ./build.py --flutter

echo ""
echo "‚úÖ Build ho√†n t·∫•t trong m√¥i tr∆∞·ªùng x86_64!" 